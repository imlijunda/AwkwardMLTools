% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/discontinuity.R
\name{FindIdx}
\alias{FindIdx}
\alias{FindIdxUnsorted}
\title{Find indices}
\usage{
FindIdx(val, key, cmpf = `>=`)

FindIdxUnsorted(val, key, cmpf = `>=`)
}
\arguments{
\item{val}{a vector of values.}

\item{key}{a vector of keys to find in val.}

\item{cmpf}{a comparison function.}
}
\value{
a vector of found indices.
}
\description{
this niche function compares key to val by cmpf(val, key), and
returns the indices that passed cmpf(). FindIdx assumes that val and key are
sorted by cmpf and finds indices in O(n). FindIdxUnsorted assumes that val
and key are not sorted and finds indices in O(n^2). Since cmpf is arbitrary,
binary search is not used.
}
\examples{
measured <- sort(sample(seq(1000000), 500000))
sampled <- sort(sample(measured, 20000) + runif(20000, -100, 0))
indices <- FindIdx(measured, sampled, cmpf = `>=`)
stopifnot(all(measured[indices] >= sampled))
}
